{"version":3,"sources":["hooks/useLocalStorage.ts","utils/GitLabUtils.ts","components/UserList.tsx","components/CommentList.tsx","components/ProjectList.tsx","hooks/useDebounce.ts","utils/ChartUtils.ts","components/gitlab.svg","components/ChartContainer.tsx","components/TooltipPrompt.tsx","components/BaseChartTooltip.tsx","components/Login.tsx","App.tsx","utils/ExcelUtils.ts","reportWebVitals.ts","index.tsx"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","client","searchText","a","Projects","search","projects","getDiscussons","projectId","createdAfter","createdBefore","MergeRequests","all","perPage","allMrs","mrs","filter","user_notes_count","promises","map","mrItem","MergeRequestDiscussions","iid","then","items","discussion","notes","some","system","mergeRequest","Promise","allSettled","allComments","comments","flatMap","status","getUserComments","MergeRequestNotes","comment","getNoteUrl","web_url","id","UserList","user","label","onUserSelected","credentials","useMemo","Gitlab","users","setUsers","useEffect","Users","Autocomplete","options","getOptionLabel","option","name","onChange","_","newValue","renderOption","props","ListItem","alignItems","disabled","state","ListItemButton","selected","ListItemAvatar","Avatar","alt","src","avatar_url","ListItemText","primary","secondary","username","renderInput","params","TextField","variant","CommentList","List","author","href","target","rel","title","body","ProjectList","project","onProjectSelected","React","open","setOpen","setOptions","loading","setLoading","setValue","debouncedValue","delay","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","searchProjects","finally","name_with_namespace","onOpen","onClose","onInputChange","newInputValue","filterOptions","x","description","InputProps","endAdornment","Fragment","CircularProgress","color","size","getDataForUser","rawData","userType","userName","groupByUserType","commentsRecieved","tidy","data","commentsPerUser","groupBy","summarize","total","n","barDatum","sum","forEach","convertToItemsLeft","reviewers","distinct","reviewer","authors","barData","indexBy","keys","arrange","asc","convertToItemsReceived","getAuthorReviewerFromComments","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","fill","_ref4","_ref5","_ref6","_ref7","_ref8","SvgGitlab","_ref","svgRef","titleId","viewBox","xmlns","preserveAspectRatio","ref","ForwardRef","ChartContainer","children","Paper","square","component","TooltipPrompt","LightTooltip","styled","className","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","palette","common","white","boxShadow","shadows","fontSize","BaseChartTooltip","style","background","borderRadius","padding","whiteSpace","display","width","height","marginRight","Login","onLoggedIn","token","setToken","host","setHost","handleLoggedIn","useCallback","current","catch","ex","Box","justifyContent","Stack","spacing","alignSelf","Typography","required","placeholder","e","type","Button","onClick","barChartSettings","margin","left","labelTextColor","labelSkipWidth","labelSkipHeight","layout","App","setCredentials","selectedUser","selectUser","setProject","setComments","discussions","setDiscussions","Date","setCreatedBefore","setMonth","getMonth","setCreatedAfter","setUser","filteredComments","setFilteredComments","showComments","toISOString","showDiscussions","discussionsLeft","convertToDiscussionsLeft","discussionsReceived","convertToDiscussionsReceived","commentsLeft","convertToCommentsLeft","convertToCommentsReceived","commentsRecievedFromUsers","userId","convertToCommentsRecivedFromUsers","commentsLeftToUsers","convertToCommentsLeftToUsers","updateComments","reviewerName","authorName","getFilteredComments","anchorElUser","setAnchorElUser","handleCloseUserMenu","AppBar","position","Container","maxWidth","Toolbar","disableGutters","noWrap","sx","mr","flexGrow","IconButton","event","currentTarget","p","Menu","mt","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","textAlign","substring","newDate","InputLabelProps","shrink","fullWidth","exportEntries","config","filename","sheet","zipcelx","downloadComments","flexDirection","indexValue","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0ac7ebd.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: T) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n","import { Gitlab } from '@gitbeaker/core/dist/types';\nimport { MergeRequestNoteSchema, MergeRequestSchema, DiscussionSchema } from '@gitbeaker/core/dist/types/types';\n\nexport interface UserComment {\n  mergeRequest: MergeRequestSchema;\n  comment: MergeRequestNoteSchema;\n}\n\nexport interface UserDiscussion {\n  mergeRequest: MergeRequestSchema;\n  discussion: DiscussionSchema;\n}\n\nexport interface UserCommentsOptions {\n  projectId: number;\n  createdAfter?: string;\n  createdBefore?: string;\n}\n\nexport async function searchProjects(client: Gitlab, searchText: string) {\n  const projects = await client.Projects.search(searchText);\n  return projects;\n}\n\nexport async function getDiscussons(client: Gitlab, { projectId, createdAfter, createdBefore }: UserCommentsOptions) {\n  const allMrs = await client.MergeRequests.all({\n    projectId,\n    createdAfter,\n    createdBefore,\n    perPage: 100,\n  });\n\n  const mrs = allMrs.filter((item) => item.user_notes_count !== 0);\n  const promises = mrs.map((mrItem) => {\n    return client.MergeRequestDiscussions.all(projectId, mrItem.iid, { perPage: 100 }).then((items) => {\n      const filtered = items.filter((discussion) => discussion.notes?.some((item) => !item.system));\n      return filtered.map((item) => ({ mergeRequest: mrItem, discussion: item } as UserDiscussion));\n    });\n  });\n\n  const allComments = await Promise.allSettled(promises);\n\n  const comments = allComments.flatMap((item) => (item.status === 'fulfilled' ? item.value : []));\n\n  return comments;\n}\n\nexport async function getUserComments(\n  client: Gitlab,\n  { projectId, createdAfter, createdBefore }: UserCommentsOptions\n): Promise<UserComment[]> {\n  const allMrs = await client.MergeRequests.all({\n    projectId,\n    createdAfter,\n    createdBefore,\n    perPage: 100,\n  });\n\n  const mrs = allMrs.filter((item) => item.user_notes_count !== 0);\n  const promises = mrs.map((mrItem) => {\n    return client.MergeRequestNotes.all(projectId, mrItem.iid, { perPage: 100 }).then((items) => {\n      const userNotes = items.filter((item) => !item.system);\n\n      return userNotes.map((item) => ({ mergeRequest: mrItem, comment: item } as UserComment));\n    });\n  });\n\n  const allComments = await Promise.allSettled(promises);\n\n  const comments = allComments.flatMap((item) => (item.status === 'fulfilled' ? item.value : []));\n\n  return comments;\n}\n\nexport function getFilteredComments(comments: UserComment[], reviewerName: string | null, authorName: string | null) {\n  let filteredComments = comments;\n\n  if (!!reviewerName) {\n    filteredComments = filteredComments.filter((item) => item.comment.author.username === reviewerName);\n  }\n\n  if (!!authorName) {\n    filteredComments = filteredComments.filter((item) => item.mergeRequest.author.username === authorName);\n  }\n\n  return filteredComments;\n}\n\nexport function getNoteUrl({ mergeRequest, comment }: UserComment) {\n  return `${mergeRequest.web_url}/#note_${comment.id}`;\n}\n","import { useMemo, useEffect, useState } from 'react';\nimport { UserSchema } from '@gitbeaker/core/dist/types/types';\nimport { Autocomplete, Avatar, ListItem, ListItemAvatar, ListItemButton, ListItemText, TextField } from '@mui/material';\nimport { Credentials } from '../App';\nimport { Gitlab } from '@gitbeaker/browser';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\n\nexport interface UserListProps {\n  label: string;\n  user: UserSchema | null;\n  onUserSelected: (user: UserSchema | null) => void;\n}\n\nexport function UserList({ user, label, onUserSelected }: UserListProps) {\n  const [credentials] = useLocalStorage<Credentials | null>('credentials', null);\n  const client = useMemo(() => new Gitlab(credentials), [credentials]);\n  const [users, setUsers] = useState<UserSchema[]>([]);\n\n  useEffect(() => {\n    client.Users.all({ perPage: 100 }).then((users) => {\n      setUsers(users);\n    });\n  }, [client]);\n\n  return (\n    <Autocomplete\n      value={user}\n      options={users}\n      getOptionLabel={(option) => option.name}\n      onChange={(_, newValue) => onUserSelected(newValue)}\n      renderOption={(props, item) => (\n        <ListItem key={item.id} alignItems=\"flex-start\" disabled={item.state === 'blocked'} {...props}>\n          <ListItemButton selected={user?.id === item.id}>\n            <ListItemAvatar>\n              <Avatar alt={item.name} src={item.avatar_url} />\n            </ListItemAvatar>\n            <ListItemText primary={item.name} secondary={item.username} />\n          </ListItemButton>\n        </ListItem>\n      )}\n      renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n    />\n  );\n}\n\nexport default UserList;\n","import { UserComment, getNoteUrl } from './../utils/GitLabUtils';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText } from '@mui/material';\n\nexport interface CommentListProps {\n  comments: UserComment[];\n}\n\nexport function CommentList({ comments }: CommentListProps) {\n  return (\n    <List>\n      {comments.map((item) => (\n        <ListItem key={item.comment.id}>\n          <ListItemAvatar>\n            <Avatar src={item.comment.author.avatar_url} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <a href={getNoteUrl(item)} target=\"_blank\" rel=\"noreferrer\">\n                {item.mergeRequest.title}\n              </a>\n            }\n            secondary={item.comment.body}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { searchProjects } from '../utils/GitLabUtils';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { Gitlab } from '@gitbeaker/browser';\nimport { useDebounce } from '../hooks/useDebounce';\nimport { Credentials } from '../App';\nimport { ProjectSchema } from '@gitbeaker/core/dist/types/types';\nimport { Autocomplete, Avatar, ListItem, ListItemAvatar, ListItemButton, ListItemText, TextField } from '@mui/material';\n\nexport interface ProjectListProps {\n  project: ProjectSchema;\n  onProjectSelected: (project: ProjectSchema | null) => void;\n}\n\nexport function ProjectList({ project, onProjectSelected }: ProjectListProps) {\n  const [credentials] = useLocalStorage<Credentials | null>('credentials', null);\n  const client = useMemo(() => new Gitlab(credentials), [credentials]);\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState<ProjectSchema[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const [value, setValue] = useState<string>('');\n  const debouncedValue = useDebounce(value, 300);\n\n  useEffect(() => {\n    if (client && open && debouncedValue) {\n      setLoading(true);\n      searchProjects(client, debouncedValue)\n        .then(setOptions)\n        .finally(() => setLoading(false));\n    }\n  }, [client, debouncedValue, open]);\n\n  return (\n    <Autocomplete\n      getOptionLabel={(option) => option.name_with_namespace}\n      open={open}\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n      options={options}\n      loading={loading}\n      value={project}\n      onChange={(_, newValue) => onProjectSelected(newValue)}\n      onInputChange={(_, newInputValue) => setValue(newInputValue)}\n      // reset client side filtering\n      filterOptions={(x) => x}\n      renderOption={(props, item) => (\n        <ListItem key={item.id} alignItems=\"flex-start\" {...props}>\n          <ListItemButton selected={project?.id === item.id}>\n            <ListItemAvatar>\n              <Avatar alt={item.name} src={item.avatar_url} />\n            </ListItemAvatar>\n            <ListItemText primary={item.name_with_namespace} secondary={item.description} />\n          </ListItemButton>\n        </ListItem>\n      )}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Projects\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import { useEffect, useState } from 'react';\n\n/**\n * https://usehooks.com/useDebounce/\n * @param value values which will be changed in @param delay milliseconds\n * @param delay delay to change provided value\n * @returns debounced value\n */\nexport function useDebounce<T>(value: T, delay: number): T {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n}\n","import { BarDatum } from '@nivo/bar';\nimport { UserComment, UserDiscussion } from './GitLabUtils';\nimport { arrange, asc, distinct, groupBy, sum, summarize, tidy, filter, n } from '@tidyjs/tidy';\n\ninterface ReviewBarDatum extends BarDatum {\n  userName: string;\n  total: number;\n}\n\ninterface AuthorReviewer {\n  reviewer: string;\n  author: string;\n}\n\ninterface ReviewBarChartSettings<T = BarDatum> {\n  indexBy: string;\n  keys: string[];\n  data: T[];\n}\n\nexport function convertToDiscussionsLeft(discussions: UserDiscussion[]): ReviewBarChartSettings<ReviewBarDatum> {\n  const rawData = discussions\n    .map(\n      (item) =>\n        ({\n          author: item.mergeRequest.author.username as string,\n          reviewer: (item.discussion?.notes?.[0]?.author.username as string) ?? '[empty]',\n        } as AuthorReviewer)\n    )\n    .filter((item) => item.reviewer !== item.author);\n\n  return convertToItemsLeft(rawData);\n}\n\nexport function convertToDiscussionsReceived(discussions: UserDiscussion[]): ReviewBarChartSettings<ReviewBarDatum> {\n  const rawData = discussions\n    .map(\n      (item) =>\n        ({\n          author: item.mergeRequest.author.username as string,\n          reviewer: (item.discussion?.notes?.[0]?.author.username as string) ?? '[empty]',\n        } as AuthorReviewer)\n    )\n    .filter((item) => item.reviewer !== item.author);\n\n  return convertToItemsReceived(rawData);\n}\n\nexport function convertToCommentsLeft(comments: UserComment[]): ReviewBarChartSettings<ReviewBarDatum> {\n  const rawData = getAuthorReviewerFromComments(comments).filter((item) => item.reviewer !== item.author);\n  return convertToItemsLeft(rawData);\n}\n\nexport function convertToCommentsReceived(comments: UserComment[]): ReviewBarChartSettings<ReviewBarDatum> {\n  const rawData = getAuthorReviewerFromComments(comments).filter((item) => item.reviewer !== item.author);\n  return convertToItemsReceived(rawData);\n}\n\nexport function convertToCommentsRecivedFromUsers(comments: UserComment[], userId: number): ReviewBarChartSettings {\n  const rawData = getAuthorReviewerFromComments(\n    comments.filter((item) => item.mergeRequest.author.id === userId)\n  ).filter((item) => item.reviewer !== item.author);\n\n  const data = tidy(rawData, groupBy('reviewer', [summarize({ total: n() })]), arrange([asc('total')]));\n\n  return {\n    indexBy: 'reviewer',\n    keys: ['total'],\n    data,\n  };\n}\n\nexport function convertToCommentsLeftToUsers(comment: UserComment[], userId: number): ReviewBarChartSettings {\n  const rawData = getAuthorReviewerFromComments(comment.filter((item) => item.comment.author.id === userId)).filter(\n    (item) => item.author !== item.reviewer\n  );\n\n  const data = tidy(rawData, groupBy('author', [summarize({ total: n() })]), arrange([asc('total')]));\n\n  return {\n    indexBy: 'author',\n    keys: ['total'],\n    data,\n  };\n}\n\nfunction getDataForUser(rawData: AuthorReviewer[], userType: 'author' | 'reviewer', userName: string): ReviewBarDatum {\n  const groupByUserType = userType === 'author' ? 'reviewer' : 'author';\n\n  const commentsRecieved = tidy(\n    rawData,\n    filter((data) => data[userType] === userName)\n  );\n\n  const commentsPerUser = tidy(\n    commentsRecieved,\n    groupBy([groupByUserType], [summarize({ total: n() })]),\n    filter((data) => data.total !== 0)\n  );\n\n  const barDatum: ReviewBarDatum = {\n    userName,\n    total: tidy(\n      commentsPerUser,\n      summarize({\n        total: sum('total'),\n      })\n    )[0].total,\n  };\n  commentsPerUser.forEach((comment) => {\n    barDatum[comment[groupByUserType]] = comment.total;\n  });\n\n  return barDatum;\n}\n\nfunction convertToItemsLeft(items: AuthorReviewer[]): ReviewBarChartSettings<ReviewBarDatum> {\n  const reviewers = tidy(items, distinct(['reviewer'])).map((item) => item.reviewer);\n  const authors = tidy(items, distinct(['author'])).map((item) => item.author);\n\n  let barData = reviewers.map((userName) => {\n    return getDataForUser(items, 'reviewer', userName);\n  });\n\n  barData = tidy(barData, arrange([asc('total')]));\n\n  return {\n    indexBy: 'userName',\n    keys: authors,\n    data: barData,\n  };\n}\n\nfunction convertToItemsReceived(items: AuthorReviewer[]): ReviewBarChartSettings<ReviewBarDatum> {\n  const reviewers = tidy(items, distinct(['reviewer'])).map((item) => item.reviewer);\n  const authors = tidy(items, distinct(['author'])).map((item) => item.author);\n\n  let barData = authors.map((userName) => {\n    return getDataForUser(items, 'author', userName);\n  });\n\n  barData = tidy(barData, arrange([asc('total')]));\n\n  return {\n    indexBy: 'userName',\n    keys: reviewers,\n    data: barData,\n  };\n}\n\nfunction getAuthorReviewerFromComments(comments: UserComment[]) {\n  return comments.map<AuthorReviewer>((item) => ({\n    reviewer: item.comment.author.username,\n    author: item.mergeRequest.author.username as string,\n  }));\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M128.075 236.075l47.104-144.97H80.97l47.104 144.97z\",\n  fill: \"#E24329\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M128.075 236.074L80.97 91.104H14.956l113.119 144.97z\",\n  fill: \"#FC6D26\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.956 91.104L.642 135.16a9.752 9.752 0 0 0 3.542 10.903l123.891 90.012-113.12-144.97z\",\n  fill: \"#FCA326\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.956 91.105H80.97L52.601 3.79c-1.46-4.493-7.816-4.492-9.275 0l-28.37 87.315z\",\n  fill: \"#E24329\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M128.075 236.074l47.104-144.97h66.015l-113.12 144.97z\",\n  fill: \"#FC6D26\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M241.194 91.104l14.314 44.056a9.752 9.752 0 0 1-3.543 10.903l-123.89 90.012 113.119-144.97z\",\n  fill: \"#FCA326\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M241.194 91.105h-66.015l28.37-87.315c1.46-4.493 7.816-4.492 9.275 0l28.37 87.315z\",\n  fill: \"#E24329\"\n});\n\nfunction SvgGitlab(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 256 236\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    preserveAspectRatio: \"xMinYMin meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGitlab);\nexport default __webpack_public_path__ + \"static/media/gitlab.03baf535.svg\";\nexport { ForwardRef as ReactComponent };","import { Paper } from '@mui/material';\n\nexport interface ChartContainerProps {\n  title: string;\n  children: React.ReactChild;\n}\n\nexport function ChartContainer({ children, title }: ChartContainerProps) {\n  return (\n    <Paper variant=\"outlined\" square component=\"section\">\n      <h3>{title}</h3>\n      {children}\n    </Paper>\n  );\n}\n","import HelpIcon from '@mui/icons-material/Help';\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\n\nexport interface TooltipPromptProps {\n  children: TooltipProps['title'];\n}\n\nexport function TooltipPrompt({ children }: TooltipPromptProps) {\n  return <LightTooltip title={children}>{<HelpIcon />}</LightTooltip>;\n}\n\nconst LightTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 14,\n  },\n}));\n","import React from 'react';\n\nexport interface BaseChartTooltipProps {\n  color: string;\n}\n\nexport function BaseChartTooltip({ color, children }: React.PropsWithChildren<BaseChartTooltipProps>) {\n  return (\n    <div\n      style={{\n        background: 'white',\n        color: 'inherit',\n        fontSize: 'inherit',\n        borderRadius: 2,\n        boxShadow: 'rgb(0 0 0 / 25%) 0px 1px 2px',\n        padding: '5px 9px',\n      }}\n    >\n      <div style={{ whiteSpace: 'pre', display: 'flex', alignItems: 'center' }}>\n        <span\n          style={{\n            display: 'block',\n            width: 12,\n            height: 12,\n            background: color,\n            marginRight: 7,\n          }}\n        ></span>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import { Button, Stack, TextField, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useCallback, useState } from 'react';\nimport { ReactComponent as GitLabIcon } from './gitlab.svg';\nimport { Gitlab } from '@gitbeaker/browser';\nimport { UserSchema } from '@gitbeaker/core/dist/types/types';\nimport { TooltipPrompt } from './';\nexport interface LoginProps {\n  onLoggedIn: (token: string, host: string, user: UserSchema) => void;\n}\n\nexport function Login({ onLoggedIn }: LoginProps) {\n  const [token, setToken] = useState('');\n  const [host, setHost] = useState('');\n\n  //TODO: need to call client.Users.current() to make sure token and host are correct\n\n  const handleLoggedIn = useCallback(() => {\n    //TODO: replace when start using react-router\n    const client = new Gitlab({\n      token,\n      host,\n    });\n\n    client.Users.current()\n      .then((user) => {\n        onLoggedIn(token, host, user);\n      })\n      .catch((ex) => {\n        console.log(ex);\n      });\n  }, [host, onLoggedIn, token]);\n\n  return (\n    <Box style={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n      <Stack style={{ width: 500 }} spacing={2}>\n        <GitLabIcon style={{ width: 150, alignSelf: 'center' }} />\n        <Typography variant=\"h5\" component=\"h1\" alignSelf={'center'}>\n          GitLab Code Review Analyzer\n        </Typography>\n        <TextField\n          required\n          label=\"Host\"\n          name=\"host\"\n          placeholder=\"https://gitlab.com\"\n          value={host}\n          onChange={(e) => setHost(e.target.value)}\n        />\n        <TextField\n          required\n          label=\"Token\"\n          name=\"token\"\n          value={token}\n          type=\"password\"\n          onChange={(e) => setToken(e.target.value)}\n          InputProps={{\n            endAdornment: (\n              <TooltipPrompt>\n                <a\n                  href=\"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#create-a-personal-access-token\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Personal Access Token\n                </a>\n              </TooltipPrompt>\n            ),\n          }}\n        />\n        <Button onClick={handleLoggedIn}>Sing In</Button>\n      </Stack>\n    </Box>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport './App.css';\nimport { Gitlab } from '@gitbeaker/browser';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { getFilteredComments, getUserComments, getDiscussons, UserComment, UserDiscussion } from './utils/GitLabUtils';\nimport { UserSchema } from '@gitbeaker/core/dist/types/types';\nimport { UserList } from './components/UserList';\nimport { CommentList } from './components/CommentList';\nimport { ProjectList } from './components/ProjectList';\nimport { Bar, BarSvgProps, BarDatum } from '@nivo/bar';\nimport {\n  convertToCommentsLeft,\n  convertToCommentsLeftToUsers,\n  convertToCommentsReceived,\n  convertToCommentsRecivedFromUsers,\n  convertToDiscussionsLeft,\n  convertToDiscussionsReceived,\n} from './utils/ChartUtils';\nimport { Login } from './components/Login';\nimport {\n  AppBar,\n  Box,\n  Container,\n  IconButton,\n  Toolbar,\n  Typography,\n  MenuItem,\n  Tooltip,\n  Avatar,\n  Menu,\n  Button,\n  TextField,\n  Stack,\n} from '@mui/material';\nimport { downloadComments } from './utils/ExcelUtils';\nimport { ProjectSchema } from '@gitbeaker/core/dist/types/types';\nimport { ChartContainer } from './components/ChartContainer';\nimport { BaseChartTooltip } from './components';\n\nexport interface Credentials {\n  token: string;\n  host: string;\n}\n\nconst barChartSettings = {\n  width: 500,\n  height: 400,\n  margin: { left: 150 },\n  padding: 0.2,\n  labelTextColor: 'inherit:darker(1.4)',\n  labelSkipWidth: 16,\n  labelSkipHeight: 16,\n  layout: 'horizontal',\n} as BarSvgProps<BarDatum>;\n\nfunction App() {\n  const [credentials, setCredentials] = useLocalStorage<Credentials | null>('credentials', null);\n  const [selectedUser, selectUser] = useLocalStorage<UserSchema | null>('user', null);\n  const [project, setProject] = useLocalStorage<ProjectSchema | null>('project', null);\n  const [comments, setComments] = useState<UserComment[]>([]);\n  const [discussions, setDiscussions] = useState<UserDiscussion[]>([]);\n  const [createdBefore, setCreatedBefore] = useState<Date>(new Date());\n  const [createdAfter, setCreatedAfter] = useState<Date>(new Date(new Date().setMonth(new Date().getMonth() - 1)));\n  const [user, setUser] = useState<UserSchema | null>(null);\n\n  const [filteredComments, setFilteredComments] = useState<UserComment[]>([]);\n\n  const client = useMemo(() => new Gitlab(credentials), [credentials]);\n\n  useEffect(() => {\n    client.Users.current().then((current) => {\n      setUser(current);\n    });\n  }, [client]);\n\n  const handleAnalyze = () => {\n    Promise.all([showComments(), showDiscussions()]);\n  };\n\n  const showComments = async () => {\n    try {\n      if (!project) return;\n\n      const comments = await getUserComments(client, {\n        projectId: project.id,\n        createdAfter: createdAfter.toISOString(),\n        createdBefore: createdBefore.toISOString(),\n      });\n\n      setComments(comments);\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const showDiscussions = async () => {\n    try {\n      if (!project) return;\n\n      const discussions = await getDiscussons(client, {\n        projectId: project.id,\n        createdAfter: createdAfter.toISOString(),\n        createdBefore: createdBefore.toISOString(),\n      });\n\n      setDiscussions(discussions);\n\n      console.log(discussions);\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const discussionsLeft = useMemo(() => convertToDiscussionsLeft(discussions), [discussions]);\n  const discussionsReceived = useMemo(() => convertToDiscussionsReceived(discussions), [discussions]);\n  const commentsLeft = useMemo(() => convertToCommentsLeft(comments), [comments]);\n  const commentsRecieved = useMemo(() => convertToCommentsReceived(comments), [comments]);\n  const commentsRecievedFromUsers = useMemo(\n    () => (selectedUser ? convertToCommentsRecivedFromUsers(comments, selectedUser.id) : null),\n    [comments, selectedUser]\n  );\n  const commentsLeftToUsers = useMemo(\n    () => (selectedUser ? convertToCommentsLeftToUsers(comments, selectedUser.id) : null),\n    [comments, selectedUser]\n  );\n  const updateComments = useCallback(\n    (reviewerName: string | null, authorName: string | null) => {\n      setFilteredComments(getFilteredComments(comments, reviewerName, authorName));\n    },\n    [comments]\n  );\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenUserMenu = (event: any) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setCredentials(null);\n    handleCloseUserMenu();\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  if (!credentials) {\n    return (\n      <Login\n        onLoggedIn={(token, host, user) => {\n          setCredentials({\n            token,\n            host,\n          });\n          setUser(user);\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <Typography variant=\"h6\" noWrap component=\"div\" sx={{ mr: 2, display: 'flex', flexGrow: 1 }}>\n              Analyzer\n            </Typography>\n            <Box sx={{ flexGrow: 0 }}>\n              <Tooltip title=\"Open settings\">\n                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                  <Avatar alt={user?.name} src={user?.avatar_url} />\n                </IconButton>\n              </Tooltip>\n              <Menu\n                sx={{ mt: '45px' }}\n                id=\"menu-appbar\"\n                anchorEl={anchorElUser}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorElUser)}\n                onClose={handleCloseUserMenu}\n              >\n                <MenuItem onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">Logout</Typography>\n                </MenuItem>\n              </Menu>\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Box style={{ display: 'flex' }}>\n        <Stack className=\"App-users\" spacing={2}>\n          <ProjectList project={project} onProjectSelected={setProject} />\n          <UserList label=\"Author\" user={selectedUser} onUserSelected={selectUser} />\n          <TextField\n            label=\"Created After\"\n            type=\"date\"\n            value={createdAfter?.toISOString().substring(0, 10)}\n            onChange={(newValue) => {\n              const newDate = new Date(newValue.target.value);\n              setCreatedAfter(newDate);\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            fullWidth\n          />\n          <TextField\n            label=\"Created Before\"\n            type=\"date\"\n            value={createdBefore?.toISOString().substring(0, 10)}\n            onChange={(newValue) => {\n              const newDate = new Date(newValue.target.value);\n              setCreatedBefore(newDate);\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            fullWidth\n          />\n          <Button onClick={handleAnalyze}>Analyze</Button>\n          <Button\n            onClick={() => {\n              downloadComments(filteredComments);\n            }}\n          >\n            Download\n          </Button>\n        </Stack>\n        <div style={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\n          <div className=\"charts\">\n            {selectedUser && commentsLeftToUsers && (\n              <ChartContainer title={`${selectedUser?.name} reviews following people`}>\n                <Bar\n                  {...barChartSettings}\n                  {...commentsLeftToUsers}\n                  onClick={(e) => {\n                    updateComments(selectedUser.username, e.data.author as string);\n                  }}\n                />\n              </ChartContainer>\n            )}\n            {selectedUser && commentsRecievedFromUsers && (\n              <ChartContainer title={`Following people review ${selectedUser?.name}`}>\n                <Bar\n                  {...barChartSettings}\n                  {...commentsRecievedFromUsers}\n                  onClick={(e) => {\n                    updateComments(e.data.reviewer as string, selectedUser.username);\n                  }}\n                />\n              </ChartContainer>\n            )}\n            <ChartContainer title=\"Comments left by person\">\n              <Bar\n                {...barChartSettings}\n                {...commentsLeft}\n                tooltip={(props) => {\n                  const { indexValue, value, id } = props;\n\n                  return (\n                    <BaseChartTooltip {...props}>\n                      <strong>{indexValue}</strong> left <strong>{value}</strong> comments to <strong>{id}</strong>\n                    </BaseChartTooltip>\n                  );\n                }}\n                onClick={(e) => {\n                  updateComments(e.indexValue as string, e.id as string);\n                }}\n              />\n            </ChartContainer>\n\n            <ChartContainer title=\"Comments recieved by person\">\n              <Bar\n                {...barChartSettings}\n                {...commentsRecieved}\n                tooltip={(props) => {\n                  const { indexValue, value, id } = props;\n\n                  return (\n                    <BaseChartTooltip {...props}>\n                      <strong>{id}</strong> left <strong>{value}</strong> comments to <strong>{indexValue}</strong>\n                    </BaseChartTooltip>\n                  );\n                }}\n                onClick={(e) => {\n                  updateComments(e.id as string, e.indexValue as string);\n                }}\n              />\n            </ChartContainer>\n            <ChartContainer title=\"Discussions left by person\">\n              <Bar\n                {...barChartSettings}\n                {...discussionsLeft}\n                tooltip={(props) => {\n                  const { indexValue, value, id } = props;\n\n                  return (\n                    <BaseChartTooltip {...props}>\n                      <strong>{indexValue}</strong> started <strong>{value}</strong> discussions with <strong>{id}</strong>\n                    </BaseChartTooltip>\n                  );\n                }}\n                onClick={(e) => {\n                  console.log(e);\n                }}\n              />\n            </ChartContainer>\n            <ChartContainer title=\"Discussions received by person\">\n              <Bar\n                {...barChartSettings}\n                {...discussionsReceived}\n                tooltip={(props) => {\n                  const { indexValue, value, id } = props;\n\n                  return (\n                    <BaseChartTooltip {...props}>\n                      <strong>{indexValue}</strong> started <strong>{value}</strong> discussions with <strong>{id}</strong>\n                    </BaseChartTooltip>\n                  );\n                }}\n                onClick={(e) => {\n                  console.log(e);\n                }}\n              />\n            </ChartContainer>\n          </div>\n          <CommentList comments={filteredComments} />\n          Total: {filteredComments.length}\n        </div>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","import zipcelx, { ZipCelXConfig, ZipCelXRow } from 'zipcelx';\nimport { getNoteUrl, UserComment } from './GitLabUtils';\n\nexport function downloadComments(comments: UserComment[]) {\n  const exportEntries = comments.map<ZipCelXRow>(({ mergeRequest, comment }) => [\n    {\n      value: mergeRequest.author.username as string,\n      type: 'string',\n    },\n    {\n      value: comment.author.username,\n      type: 'string',\n    },\n    {\n      value: comment.body,\n      type: 'string',\n    },\n    {\n      value: getNoteUrl({ mergeRequest, comment }),\n      type: 'string',\n    },\n    {\n      value: mergeRequest.title,\n      type: 'string',\n    },\n  ]);\n\n  const config: ZipCelXConfig = {\n    //TODO: add ability to specify file name\n    filename: 'general-ledger-Q1',\n    sheet: {\n      data: [\n        [\n          {\n            value: 'MR Author',\n            type: 'string',\n          },\n          {\n            value: 'Comment Author - Reviewer',\n            type: 'string',\n          },\n          {\n            value: 'Comment Content',\n            type: 'string',\n          },\n          {\n            value: 'Comment Link',\n            type: 'string',\n          },\n          {\n            value: 'MR Title',\n            type: 'string',\n          },\n        ],\n        ...exportEntries,\n      ],\n    },\n  };\n\n  zipcelx(config);\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}